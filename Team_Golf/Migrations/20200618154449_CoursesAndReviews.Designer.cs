// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Team_Golf;

namespace Team_Golf.Migrations
{
    [DbContext(typeof(GolfCourseContext))]
    [Migration("20200618154449_CoursesAndReviews")]
    partial class CoursesAndReviews
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Team_Golf.Models.GolfCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GolfCourses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Good snack shack and poor caddying",
                            Image = "Bushwood.jpg",
                            Name = "Bushwood CC"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Price is wrong B&$#%",
                            Image = "FurryCreek.jpg",
                            Name = "Fury Creek Golf CC"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Waggle and let the big dog eat",
                            Image = "Cottonwood.jpg",
                            Name = "Cotton Wood"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Great course for beginners, not so much for the advanced player",
                            Image = "golfcouse5.jpg",
                            Name = "Little Met"
                        });
                });

            modelBuilder.Entity("Team_Golf.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GolfCourseId")
                        .HasColumnType("int");

                    b.Property<string>("ReviewDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReviewRating")
                        .HasColumnType("int");

                    b.Property<string>("ReviewText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GolfCourseId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GolfCourseId = 1,
                            ReviewDate = "06-18-2020",
                            ReviewRating = 1,
                            ReviewText = "I played bad. This course sucks.",
                            ReviewerName = "Ron"
                        },
                        new
                        {
                            Id = 2,
                            GolfCourseId = 1,
                            ReviewDate = "06-18-2020",
                            ReviewRating = 2,
                            ReviewText = "I played bad. This course sucks.",
                            ReviewerName = "Dan"
                        },
                        new
                        {
                            Id = 3,
                            GolfCourseId = 2,
                            ReviewDate = "06-18-2020",
                            ReviewRating = 3,
                            ReviewText = "I played bad. This course sucks.",
                            ReviewerName = "Chuck"
                        },
                        new
                        {
                            Id = 4,
                            GolfCourseId = 1,
                            ReviewDate = "06-18-2020",
                            ReviewRating = 4,
                            ReviewText = "I played bad. This course sucks.",
                            ReviewerName = "Dan"
                        });
                });

            modelBuilder.Entity("Team_Golf.Models.Review", b =>
                {
                    b.HasOne("Team_Golf.Models.GolfCourse", "GolfCourse")
                        .WithMany("Reviews")
                        .HasForeignKey("GolfCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
